async function accountReducer(instance, account) {
  return {
    id: account.id || 0,
    address1: account.address1 || "",
    address2: account.address2 || "", 
    automatic_login: account.automatic_login || false,
    automatic_provision: account.automatic_provision || false,
    bill_at: account.bill_at || "",
    charge_attempted_at: account.charge_attempted_at || "",
    city: account.city || "",
    company: account.company || "",
    country: account.country || "",
    created_by: account.created_by || "",
    crypted_password: account.crypted_password || "",
    email: account.email || "",
    email2: account.email2 || "",
    email_validated: account.email_validated || false,
    email_validation_code: account.email_validation_code || "",
    email_validation_code_expires_at: account.email_validation_code_expires_at || "",
    first_name: account.first_name || "",
    guid: account.guild || "",
    ips_are_static: account.ips_are_static || false,
    last_name: account.last_name || "",
    lock_devices: account.lock_devices || false,
    lock_version: account.lock_version || 0,
    logged_in_at: account.logged_in_at || "",
    login: account.login || "",
    max_dedicated_ips: account.max_dedicated_ips || 0,
    max_devices: account.max_devices || 0,
    max_party_devices: account.max_party_devices || 0,
    max_sessions: account.max_sessions || 0,
    mb_down: account.mb_down || 0,
    mb_up: account.mb_up || 0,
    no_usage_expiration: account.no_usage_expiration || false,
    note: account.note || "",
    nt_password: account.nt_password || "",
    phone: account.phone || "",
    phone_validated: account.phone_validated || false,
    phone_validation_code: account.phone_validation_code || "",
    phone_validation_code_expires_at: account.phone_validation_code_expires_at || "",
    pkts_down: account.pkts_down || 0,
    pkts_up: account.pkts_up || 0,
    portal_message: account.portal_message || "",
    pre_shared_key: account.pre_shared_key || "",
    region: account.region || "",
    relative_usage_lifetime: account.relative_usage_lifetime || 0,
    salt: account.salt || "",
    scratch: account.scratch || "",
    state: account.state || "",
    type: account.type || "",
    unlimited_devices: account.unlimited_devices || false,
    unlimited_party_devices: account.unlimited_party_devices || false,
    unlimited_sessions: account.unlimited_sessions || false,
    unlimited_usage_mb_down: account.unlimited_usage_mb_down || false,
    unlimited_usage_mb_up: account.unlimited_usage_mb_up || false,
    unlimited_usage_minutes: account.unlimited_usage_minutes || false,
    updated_by: account.updated_by || "",
    upnp_enabled: account.upnp_enabled || false,
    usage_expiration: account.usage_expiration || "",
    usage_mb_down: account.usage_mb_down || 0,
    usage_mb_up: account.usage_mb_up || 0,
    usage_minutes: account.usage_minutes || 0,
    zip: account.zip || "",
    created_at: account.created_at || "",
    updated_at: account.updated_at || "",
    account_group_id: account.account_group_id || 0,
    usage_plan_id: account.usage_plan_id || 0,
    // account_group: await instance.getAccountGroup({ zip: account.account_group_id }) || {},
    // usage_plan: await instance.getUsagePlan({ zip: account.usage_plan_id })
  }
}

async function deviceReducer(instance, device) {
  return {
    account: await instance.getAccount({ zip: device.account_id }) || {},
    id: device.id || 0,
    binat: device.binat || false,
    created_by: device.created_by || "",
    hidden_from_portal: device.hidden_from_portal || false,
    lock_version: device.lock_version || 0,
    mac: device.mac || "", 
    name: device.name || "",
    note: device.note || "",
    scratch: device.scratch || "",
    updated_by: device.updated_by || "",
    created_at: device.created_at || "",
    updated_at: device.updated_at || "",
    account_id: device.account_id || 0,
    lan_party_id: device.lan_party_id || 0,
    static_ip_id: device.static_ip_id || 0,
  }
}

async function usagePlanReducer(instance, usage_plan) {
  return {
    id: usage_plan.id || 0,
    absolute_usage_lifetime: usage_plan.absolute_usage_lifetime || "",
    automatic_login: usage_plan.automatic_login || false,
    automatic_provision: usage_plan.automatic_provision || false,
    base_price: usage_plan.base_price || "",
    created_by: usage_plan.created_by || "",
    currency: usage_plan.currency || "",
    description: usage_plan.description || "",
    ips_are_static: usage_plan.ips_are_static || false,
    lock_devices: usage_plan.lock_devices || false,
    max_dedicated_ips: usage_plan.max_dedicated_ips || 0,
    max_devices: usage_plan.max_devices || 0,
    max_party_devices: usage_plan.max_party_devices || 0,
    max_sessions: usage_plan.max_sessions || 0,
    name: usage_plan.name || "",
    no_usage_lifetime: usage_plan.no_usage_lifetime || false,
    note: usage_plan.note || "",
    permit_unpaid_ar: usage_plan.permit_unpaid_ar || false,
    pms_guest_match_operator: usage_plan.pms_guest_match_operator || "",
    prorate_credit: usage_plan.prorate_credit || false,
    recurring_day: usage_plan.recurring_day || 0,
    recurring_fail_limit: usage_plan.recurring_fail_limit || 0,
    recurring_lifetime_time: usage_plan.recurring_lifetime_time || 0,
    recurring_lifetime_time_unit: usage_plan.recurring_lifetime_time_unit || "",
    recurring_method: usage_plan.recurring_method || "",
    recurring_retry_grace_minutes: usage_plan.recurring_retry_grace_minutes || 0,
    scratch: usage_plan.scratch || "",
    unlimited_devices: usage_plan.unlimited_devices || false,
    unlimited_party_devices: usage_plan.unlimited_party_devices || false,
    unlimited_recurring_lifetime: usage_plan.unlimited_recurring_lifetime || false,
    unlimited_sessions: usage_plan.unlimited_sessions || false,
    unlimited_usage_lifetime: usage_plan.unlimited_usage_lifetime || false,
    updated_by: usage_plan.updated_by || "",
    upnp_enabled: usage_plan.upnp_enabled || false,
    usage_lifetime_time: usage_plan.usage_lifetime_time || 0,
    usage_lifetime_time_unit: usage_plan.usage_lifetime_time_unit || "",
    validation_grace_minutes: usage_plan.validation_grace_minutes || 0,
    validation_method: usage_plan.validation_method || "",
    variable_recurring_day: usage_plan.variable_recurring_day || false,
    created_at: usage_plan.created_at || "",
    updated_at: usage_plan.updated_at || "",
    account_group_id: usage_plan.account_group_id || 0,
    conference_id: usage_plan.conference_id || 0,
    pms_server_id: usage_plan.pms_server_id || 0,
    quota_plan_id: usage_plan.quota_plan_id || 0,
    sms_gateway_id: usage_plan.sms_gateway_id || 0,
    time_plan_id: usage_plan.time_plan_id || 0,
  }
}

async function accountGroupReducer(instance, account_group) {
  return {
    id: account_group.id || id,
    created_by: account_group.created_by || "",
    name: account_group.name || "",
    note: account_group.note || "",
    priority: account_group.priority || 0,
    scratch: account_group.scratch || "",
    updated_by: account_group.updated_by || "",
    created_at: account_group.created_at || "",
    updated_at: account_group.updated_at || "",
    conference_id: account_group.conference_id || 0,
    policy_id: account_group.policy_id || 0
  }
}

module.exports = { usagePlanReducer, deviceReducer, accountReducer, accountGroupReducer }